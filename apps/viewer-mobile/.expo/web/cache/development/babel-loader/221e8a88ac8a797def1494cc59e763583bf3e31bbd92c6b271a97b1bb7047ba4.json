{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport HomeScreen from \"./src/components/HomeScreen\";\nimport QuizScreen from \"./src/screens/QuizScreen\";\nimport triviaData from \"./src/data/trivia.json\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function App() {\n  var _useState = useState('home'),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentScreen = _useState2[0],\n    setCurrentScreen = _useState2[1];\n  var _useState3 = useState(triviaData.topics[0]),\n    _useState4 = _slicedToArray(_useState3, 1),\n    selectedTopic = _useState4[0];\n  var startQuiz = function startQuiz() {\n    setCurrentScreen('quiz');\n  };\n  var goHome = function goHome() {\n    setCurrentScreen('home');\n  };\n  return _jsxs(View, {\n    style: {\n      flex: 1\n    },\n    children: [_jsx(StatusBar, {\n      barStyle: \"light-content\"\n    }), currentScreen === 'home' ? _jsx(HomeScreen, {\n      onStart: startQuiz\n    }) : _jsx(QuizScreen, {\n      topic: selectedTopic,\n      onBack: goHome\n    })]\n  });\n}","map":{"version":3,"names":["useState","View","StatusBar","HomeScreen","QuizScreen","triviaData","jsx","_jsx","jsxs","_jsxs","App","_useState","_useState2","_slicedToArray","currentScreen","setCurrentScreen","_useState3","topics","_useState4","selectedTopic","startQuiz","goHome","style","flex","children","barStyle","onStart","topic","onBack"],"sources":["/home/cdc/projects/boxiii/react-native-branch/ZenTriviaApp/App.js"],"sourcesContent":["import { useState } from 'react';\nimport { View, StatusBar } from 'react-native';\nimport HomeScreen from './src/components/HomeScreen';\nimport QuizScreen from './src/screens/QuizScreen';\nimport triviaData from './src/data/trivia.json';\n\nexport default function App() {\n  const [currentScreen, setCurrentScreen] = useState('home');\n  const [selectedTopic] = useState(triviaData.topics[0]);\n\n  const startQuiz = () => {\n    setCurrentScreen('quiz');\n  };\n\n  const goHome = () => {\n    setCurrentScreen('home');\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <StatusBar barStyle=\"light-content\" />\n      {currentScreen === 'home' ? (\n        <HomeScreen onStart={startQuiz} />\n      ) : (\n        <QuizScreen topic={selectedTopic} onBack={goHome} />\n      )}\n    </View>\n  );\n}"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAAC,OAAAC,IAAA;AAAA,OAAAC,SAAA;AAEjC,OAAOC,UAAU;AACjB,OAAOC,UAAU;AACjB,OAAOC,UAAU;AAA+B,SAAAC,GAAA,IAAAC,IAAA,EAAAC,IAAA,IAAAC,KAAA;AAEhD,eAAe,SAASC,GAAGA,CAAA,EAAG;EAC5B,IAAAC,SAAA,GAA0CX,QAAQ,CAAC,MAAM,CAAC;IAAAY,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAnDG,aAAa,GAAAF,UAAA;IAAEG,gBAAgB,GAAAH,UAAA;EACtC,IAAAI,UAAA,GAAwBhB,QAAQ,CAACK,UAAU,CAACY,MAAM,CAAC,CAAC,CAAC,CAAC;IAAAC,UAAA,GAAAL,cAAA,CAAAG,UAAA;IAA/CG,aAAa,GAAAD,UAAA;EAEpB,IAAME,SAAS,GAAG,SAAZA,SAASA,CAAA,EAAS;IACtBL,gBAAgB,CAAC,MAAM,CAAC;EAC1B,CAAC;EAED,IAAMM,MAAM,GAAG,SAATA,MAAMA,CAAA,EAAS;IACnBN,gBAAgB,CAAC,MAAM,CAAC;EAC1B,CAAC;EAED,OACEN,KAAA,CAACR,IAAI;IAACqB,KAAK,EAAE;MAAEC,IAAI,EAAE;IAAE,CAAE;IAAAC,QAAA,GACvBjB,IAAA,CAACL,SAAS;MAACuB,QAAQ,EAAC;IAAe,CAAE,CAAC,EACrCX,aAAa,KAAK,MAAM,GACvBP,IAAA,CAACJ,UAAU;MAACuB,OAAO,EAAEN;IAAU,CAAE,CAAC,GAElCb,IAAA,CAACH,UAAU;MAACuB,KAAK,EAAER,aAAc;MAACS,MAAM,EAAEP;IAAO,CAAE,CACpD;EAAA,CACG,CAAC;AAEX","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}