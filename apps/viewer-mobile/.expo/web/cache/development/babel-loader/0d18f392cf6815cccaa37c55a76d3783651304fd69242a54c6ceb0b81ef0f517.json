{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport Card from \"../components/Card\";\nimport { styles } from \"../styles/styles\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nvar QuizScreen = function QuizScreen(_ref) {\n  var topic = _ref.topic,\n    onBack = _ref.onBack;\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentCardIndex = _useState2[0],\n    setCurrentCardIndex = _useState2[1];\n  var cards = topic.cards;\n  var nextCard = function nextCard() {\n    setCurrentCardIndex(function (prev) {\n      return (prev + 1) % cards.length;\n    });\n  };\n  var prevCard = function prevCard() {\n    setCurrentCardIndex(function (prev) {\n      return (prev - 1 + cards.length) % cards.length;\n    });\n  };\n  return _jsxs(View, {\n    style: styles.quizContainer,\n    children: [_jsx(StatusBar, {\n      barStyle: \"dark-content\",\n      backgroundColor: \"#f5f3f0\"\n    }), _jsxs(View, {\n      style: styles.header,\n      children: [_jsx(TouchableOpacity, {\n        onPress: onBack,\n        style: styles.backButton,\n        children: _jsx(Text, {\n          style: styles.backButtonText,\n          children: \"\\u2190 Back\"\n        })\n      }), _jsx(Text, {\n        style: styles.topicTitle,\n        children: topic.title\n      }), _jsxs(Text, {\n        style: styles.cardCounter,\n        children: [currentCardIndex + 1, \" / \", cards.length]\n      })]\n    }), _jsx(ScrollView, {\n      contentContainerStyle: styles.cardScrollContainer,\n      children: _jsx(Card, {\n        question: cards[currentCardIndex].question,\n        answer: cards[currentCardIndex].answer\n      })\n    }), _jsxs(View, {\n      style: styles.navigation,\n      children: [_jsx(TouchableOpacity, {\n        style: [styles.navButton, currentCardIndex === 0 && styles.navButtonDisabled],\n        onPress: prevCard,\n        disabled: currentCardIndex === 0,\n        children: _jsx(Text, {\n          style: [styles.navButtonText, currentCardIndex === 0 && styles.navButtonTextDisabled],\n          children: \"Previous\"\n        })\n      }), _jsx(TouchableOpacity, {\n        style: [styles.navButton, currentCardIndex === cards.length - 1 && styles.navButtonDisabled],\n        onPress: nextCard,\n        disabled: currentCardIndex === cards.length - 1,\n        children: _jsx(Text, {\n          style: [styles.navButtonText, currentCardIndex === cards.length - 1 && styles.navButtonTextDisabled],\n          children: \"Next\"\n        })\n      })]\n    })]\n  });\n};\nexport default QuizScreen;","map":{"version":3,"names":["React","useState","View","Text","TouchableOpacity","ScrollView","StatusBar","Card","styles","jsx","_jsx","jsxs","_jsxs","QuizScreen","_ref","topic","onBack","_useState","_useState2","_slicedToArray","currentCardIndex","setCurrentCardIndex","cards","nextCard","prev","length","prevCard","style","quizContainer","children","barStyle","backgroundColor","header","onPress","backButton","backButtonText","topicTitle","title","cardCounter","contentContainerStyle","cardScrollContainer","question","answer","navigation","navButton","navButtonDisabled","disabled","navButtonText","navButtonTextDisabled"],"sources":["/home/cdc/projects/boxiii/react-native-branch/ZenTriviaApp/src/screens/QuizScreen.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  ScrollView,\n  StatusBar,\n} from 'react-native';\nimport Card from '../components/Card';\nimport { styles } from '../styles/styles';\n\nconst QuizScreen = ({ topic, onBack }) => {\n  const [currentCardIndex, setCurrentCardIndex] = useState(0);\n  const cards = topic.cards;\n\n  const nextCard = () => {\n    setCurrentCardIndex((prev) => (prev + 1) % cards.length);\n  };\n\n  const prevCard = () => {\n    setCurrentCardIndex((prev) => (prev - 1 + cards.length) % cards.length);\n  };\n\n  return (\n    <View style={styles.quizContainer}>\n      <StatusBar barStyle=\"dark-content\" backgroundColor=\"#f5f3f0\" />\n      \n      {/* Header */}\n      <View style={styles.header}>\n        <TouchableOpacity onPress={onBack} style={styles.backButton}>\n          <Text style={styles.backButtonText}>‚Üê Back</Text>\n        </TouchableOpacity>\n        <Text style={styles.topicTitle}>{topic.title}</Text>\n        <Text style={styles.cardCounter}>\n          {currentCardIndex + 1} / {cards.length}\n        </Text>\n      </View>\n\n      {/* Card Container */}\n      <ScrollView contentContainerStyle={styles.cardScrollContainer}>\n        <Card\n          question={cards[currentCardIndex].question}\n          answer={cards[currentCardIndex].answer}\n        />\n      </ScrollView>\n\n      {/* Navigation */}\n      <View style={styles.navigation}>\n        <TouchableOpacity\n          style={[styles.navButton, currentCardIndex === 0 && styles.navButtonDisabled]}\n          onPress={prevCard}\n          disabled={currentCardIndex === 0}\n        >\n          <Text style={[styles.navButtonText, currentCardIndex === 0 && styles.navButtonTextDisabled]}>\n            Previous\n          </Text>\n        </TouchableOpacity>\n        \n        <TouchableOpacity\n          style={[styles.navButton, currentCardIndex === cards.length - 1 && styles.navButtonDisabled]}\n          onPress={nextCard}\n          disabled={currentCardIndex === cards.length - 1}\n        >\n          <Text style={[styles.navButtonText, currentCardIndex === cards.length - 1 && styles.navButtonTextDisabled]}>\n            Next\n          </Text>\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n};\n\nexport default QuizScreen;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}